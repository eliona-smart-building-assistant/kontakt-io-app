/*
 * Kontakt.io App API
 *
 * API to access and configure the Kontakt.io App
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package apiserver

// GetDashboardTemplateByName200Response - A frontend dashboard
type GetDashboardTemplateByName200Response struct {

	// The internal Id of dashboard
	Id *interface{} `json:"id,omitempty"`

	// The name for this dashboard
	Name *interface{} `json:"name"`

	// ID of the project to which the dashboard belongs
	ProjectId *interface{} `json:"projectId"`

	// ID of the user who owns the dashboard
	UserId *interface{} `json:"userId"`

	// The sequence of the dashboard
	Sequence *interface{} `json:"sequence,omitempty"`

	// List of widgets on this dashboard (order matches the order of widgets on the dashboard)
	Widgets *interface{} `json:"widgets,omitempty"`
}

// AssertGetDashboardTemplateByName200ResponseRequired checks if the required fields are not zero-ed
func AssertGetDashboardTemplateByName200ResponseRequired(obj GetDashboardTemplateByName200Response) error {
	elements := map[string]interface{}{
		"name":      obj.Name,
		"projectId": obj.ProjectId,
		"userId":    obj.UserId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseGetDashboardTemplateByName200ResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GetDashboardTemplateByName200Response (e.g. [][]GetDashboardTemplateByName200Response), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGetDashboardTemplateByName200ResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGetDashboardTemplateByName200Response, ok := obj.(GetDashboardTemplateByName200Response)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGetDashboardTemplateByName200ResponseRequired(aGetDashboardTemplateByName200Response)
	})
}
